{"version":3,"file":"655.f5a18c91.js","mappings":"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","sources":["webpack://cos-ui/./src/Alerts.tsx","webpack://cos-ui/./src/Patternfly-Logo.svg","webpack://cos-ui/./src/AppLayout.tsx","webpack://cos-ui/./src/Keycloak.tsx","webpack://cos-ui/./src/AppDemo.tsx","webpack://cos-ui/./src/AppE2E.tsx","webpack://cos-ui/./src/bootstrap.tsx"],"sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react';\n\nimport {\n  AlertGroup,\n  Alert,\n  AlertActionCloseButton,\n} from '@patternfly/react-core';\n\nimport {\n  AlertContext,\n  AlertProps,\n  AlertVariant,\n} from '@rhoas/app-services-ui-shared';\n\ntype TimeOut = {\n  key: string | undefined;\n  timeOut: ReturnType<typeof setTimeout> | undefined;\n};\n\n/**\n * Mocks the behaviour of notifications on console.redhat.com\n */\nexport const AlertsProvider: FunctionComponent = ({ children }) => {\n  const [alerts, setAlerts] = useState<AlertProps[]>([]);\n  const [timers, setTimers] = useState<TimeOut[]>([]);\n\n  useEffect(() => {\n    const timersKeys = timers.map((timer) => timer.key);\n    const timeOuts = alerts\n      .filter((alert) => !timersKeys.includes(alert?.id))\n      .map((alert) => {\n        const { id = '' } = alert;\n        const timeOut: ReturnType<typeof setTimeout> = setTimeout(\n          () => hideAlert(id),\n          8000\n        );\n        return { key: alert.id, timeOut } as TimeOut;\n      });\n    setTimers([...timers, ...timeOuts]);\n    return () =>\n      timers.forEach((timer) => timer?.timeOut && clearTimeout(timer.timeOut));\n    // enabling this will cause an infinite render loop\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [alerts]);\n\n  const createId = () => new Date().getTime();\n\n  const hideAlert = (key: string | undefined) => {\n    setAlerts((alerts) => [...alerts.filter((el) => el.id !== key)]);\n    setTimers((timers) => [...timers.filter((timer) => timer.key === key)]);\n  };\n\n  const addAlert = (props: AlertProps) => {\n    const id = createId().toString();\n    setAlerts([...alerts, { ...props, id }]);\n  };\n\n  return (\n    <AlertContext.Provider value={{ addAlert }}>\n      <AlertToastGroup alerts={alerts} onCloseAlert={hideAlert} />\n      {children}\n    </AlertContext.Provider>\n  );\n};\n\ntype AlertToastGroupProps = {\n  alerts: AlertProps[];\n  onCloseAlert: (key: string | undefined) => void;\n};\n\nexport const AlertToastGroup: React.FunctionComponent<AlertToastGroupProps> = ({\n  alerts,\n  onCloseAlert,\n}: AlertToastGroupProps) => {\n  return (\n    <AlertGroup isToast>\n      {alerts.map(\n        ({ id, variant, title, description, dataTestId, ...rest }) => (\n          <Alert\n            key={id}\n            isLiveRegion\n            variant={AlertVariant[variant]}\n            variantLabel=\"\"\n            title={title}\n            actionClose={\n              <AlertActionCloseButton\n                title={title}\n                onClose={() => onCloseAlert(id)}\n              />\n            }\n            data-testid={dataTestId}\n            {...rest}\n          >\n            {description}\n          </Alert>\n        )\n      )}\n    </AlertGroup>\n  );\n};\n","export default __webpack_public_path__ + \"f940137c.svg\";","import React, { FunctionComponent, ReactNode, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport {\n  Nav,\n  NavItem,\n  NavList,\n  Page,\n  PageHeader,\n  PageHeaderTools,\n  PageSidebar,\n} from '@patternfly/react-core';\n\nimport logo from './Patternfly-Logo.svg';\n\ninterface IAppLayout {\n  children: ReactNode;\n}\n\n/**\n * Mocks the chrome of an app running on consoles.redhat.com\n */\nexport const AppLayout: FunctionComponent<IAppLayout> = ({ children }) => {\n  const [isNavOpen, setIsNavOpen] = useState(true);\n  const [isMobileView, setIsMobileView] = useState(true);\n  const [isNavOpenMobile, setIsNavOpenMobile] = useState(false);\n\n  const { t } = useTranslation();\n\n  const onNavToggleMobile = () => {\n    setIsNavOpenMobile(!isNavOpenMobile);\n  };\n  const onNavToggle = () => {\n    setIsNavOpen(!isNavOpen);\n  };\n  const onPageResize = (props: { mobileView: boolean; windowSize: number }) => {\n    setIsMobileView(props.mobileView);\n  };\n\n  const HeaderTools = <PageHeaderTools>{'email'}</PageHeaderTools>;\n\n  const Header = (\n    <PageHeader\n      logo={<LogoImg />}\n      showNavToggle\n      isNavOpen={isNavOpen}\n      headerTools={HeaderTools}\n      onNavToggle={isMobileView ? onNavToggleMobile : onNavToggle}\n      aria-label={'global_navigation'}\n    />\n  );\n\n  const Navigation = (\n    <Nav\n      id=\"nav-primary-simple\"\n      role=\"navigation\"\n      theme=\"dark\"\n      aria-label={'global'}\n    >\n      <NavList id=\"nav-list-simple\">\n        <NavItem id={'connectors'}>\n          <NavLink to={'/'} activeClassName=\"pf-m-current\">\n            {t('managedConnectors')}\n          </NavLink>\n        </NavItem>\n      </NavList>\n    </Nav>\n  );\n  const Sidebar = (\n    <PageSidebar\n      theme=\"dark\"\n      nav={Navigation}\n      isNavOpen={isMobileView ? isNavOpenMobile : isNavOpen}\n    />\n  );\n  return (\n    <Page\n      mainContainerId=\"primary-app-container\"\n      role=\"main\"\n      header={Header}\n      sidebar={Sidebar}\n      onPageResize={onPageResize}\n    >\n      {children}\n    </Page>\n  );\n};\n\nfunction LogoImg() {\n  const history = useHistory();\n  function handleClick() {\n    history.push('/');\n  }\n  return <img src={logo} onClick={handleClick} alt=\"PatternFly Logo\" />;\n}\n","import Keycloak, { KeycloakInstance, KeycloakProfile } from 'keycloak-js';\nimport React from 'react';\n\nimport { Auth, AuthContext } from '@rhoas/app-services-ui-shared';\n\nexport let keycloak: Keycloak.KeycloakInstance | undefined;\n\n/**\n * Get keycloak instance\n *\n * @return an initiated keycloak instance or `undefined`\n * if keycloak isn't configured\n *\n */\nexport const getKeycloakInstance = async () => {\n  if (!keycloak) await init();\n  return keycloak;\n};\n\n/**\n * Initiate keycloak instance.\n *\n * Set keycloak to undefined if\n * keycloak isn't configured\n *\n */\nexport const init = async () => {\n  try {\n    keycloak = new (Keycloak as any)({\n      realm: 'redhat-external',\n      url: 'https://sso.redhat.com/auth/',\n      clientId: 'cloud-services',\n      promiseType: 'native',\n    });\n    if (keycloak) {\n      await keycloak.init({\n        onLoad: 'login-required',\n        promiseType: 'native',\n      });\n    }\n  } catch (e) {\n    keycloak = undefined;\n    console.warn(\n      'Auth: Unable to initialize keycloak. Client side will not be configured to use authentication',\n      e\n    );\n  }\n};\n\n/**\n * This function keeps getting called by wslink\n * connection param function, so carry out\n * an early return if keycloak is not initialized\n * otherwise get the auth token\n *\n * @return authorization header or empty string\n *\n */\nexport const getAuthHeader = async () => {\n  if (!keycloak) return '';\n  return {\n    authorization: `Bearer ${await getKeyCloakToken()}`,\n  };\n};\n\n/**\n * Use keycloak update token function to retrieve\n * keycloak token\n *\n * @return keycloak token or empty string if keycloak\n * isn't configured\n *\n */\nexport const getKeyCloakToken = async (): Promise<string> => {\n  await keycloak?.updateToken(50);\n  if (keycloak?.token) return keycloak.token;\n  console.error('No keycloak token available');\n  return 'foo';\n};\n\n/**\n * Use keycloak update token function to retrieve\n * keycloak token\n *\n * @return keycloak token or empty string if keycloak\n * isn't configured\n *\n */\nexport const getParsedKeyCloakToken =\n  async (): Promise<Keycloak.KeycloakTokenParsed> => {\n    await keycloak?.updateToken(50);\n    if (keycloak?.tokenParsed) return keycloak.tokenParsed;\n    console.error('No keycloak token available');\n    return {} as Keycloak.KeycloakTokenParsed;\n  };\n\n/**\n * logout of keycloak, clear cache and offline store then redirect to\n * keycloak login page\n *\n * @param keycloak the keycloak instance\n * @param client offix client\n *\n */\nexport const logout = async (\n  keycloak: Keycloak.KeycloakInstance | undefined\n) => {\n  if (keycloak) {\n    await keycloak.logout();\n  }\n};\n\n// This is a context which can manage the keycloak\nexport interface IKeycloakContext {\n  keycloak?: KeycloakInstance | undefined;\n  profile?: KeycloakProfile | undefined;\n}\n\nexport const KeycloakContext = React.createContext<IKeycloakContext>({\n  keycloak: undefined,\n});\n\nexport const KeycloakAuthProvider: React.FunctionComponent = (props) => {\n  const getUsername = () => {\n    return getParsedKeyCloakToken().then((token: any) => token['username']);\n  };\n\n  const authTokenContext = {\n    kas: {\n      getToken: getKeyCloakToken,\n    },\n    getUsername: getUsername,\n  } as Auth;\n  return (\n    <AuthContext.Provider value={authTokenContext}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n","import Keycloak from 'keycloak-js';\nimport React, {\n  FunctionComponent,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { I18nextProvider } from 'react-i18next';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { Spinner } from '@patternfly/react-core';\n\nimport {\n  BasenameContext,\n  Config,\n  ConfigContext,\n  useAuth,\n  useConfig,\n} from '@rhoas/app-services-ui-shared';\n\nimport { AlertsProvider } from './Alerts';\nimport { AppLayout } from './AppLayout';\nimport { CosRoutes } from './CosRoutes';\nimport {\n  getKeycloakInstance,\n  KeycloakAuthProvider,\n  KeycloakContext,\n} from './Keycloak';\nimport { Loading } from './Loading';\nimport i18n from './i18n';\n\nlet keycloak: Keycloak.KeycloakInstance | undefined;\n\n/**\n * Initializes the COS UI with an app that mimicks the console.redhat.com\n * experience.\n *\n * It uses Keycloak to authenticate the user against sso.redhat.com.\n * For it to work it requires the dev server to run at address\n * https://prod.foo.redhat.com:1337.\n *\n * The `baseUrl` for the API can be specified setting the `BASE_PATH` env\n * variable.\n */\nexport const AppDemo: FunctionComponent = () => {\n  const [initialized, setInitialized] = useState(false);\n\n  const getBasename = useCallback(() => '/', []);\n\n  // Initialize the client\n  useEffect(() => {\n    const init = async () => {\n      keycloak = await getKeycloakInstance();\n      setInitialized(true);\n    };\n    init();\n  }, []);\n\n  const config = {\n    cos: {\n      apiBasePath: process.env.BASE_PATH as string,\n      configurators: {\n        'debezium-mongodb-1.5.0.Final': {\n          remoteEntry:\n            'https://dbz-ui.apps.kammellol.rhmw-integrations.net/dbz-connector-configurator.remoteEntry.js',\n          scope: 'debezium_ui',\n          module: './config',\n        },\n        'debezium-mysql-1.5.0.Final': {\n          remoteEntry:\n            'https://dbz-ui.apps.kammellol.rhmw-integrations.net/dbz-connector-configurator.remoteEntry.js',\n          scope: 'debezium_ui',\n          module: './config',\n        },\n        'debezium-postgres-1.5.0.Final': {\n          remoteEntry:\n            'https://dbz-ui.apps.kammellol.rhmw-integrations.net/dbz-connector-configurator.remoteEntry.js',\n          scope: 'debezium_ui',\n          module: './config',\n        },\n      } as Record<string, unknown>,\n    },\n  } as Config;\n\n  return (\n    <KeycloakContext.Provider value={{ keycloak, profile: keycloak?.profile }}>\n      <KeycloakAuthProvider>\n        <BasenameContext.Provider value={{ getBasename }}>\n          <ConfigContext.Provider value={config}>\n            <I18nextProvider i18n={i18n}>\n              <AlertsProvider>\n                <React.Suspense fallback={<Loading />}>\n                  <Router>\n                    <AppLayout>\n                      {initialized ? <ConnectedRoutes /> : <Spinner />}\n                    </AppLayout>\n                  </Router>\n                </React.Suspense>\n              </AlertsProvider>\n            </I18nextProvider>\n          </ConfigContext.Provider>\n        </BasenameContext.Provider>\n      </KeycloakAuthProvider>\n    </KeycloakContext.Provider>\n  );\n};\nconst ConnectedRoutes = () => {\n  const auth = useAuth();\n  const config = useConfig();\n\n  return (\n    <CosRoutes\n      getToken={async () => (await auth?.kas.getToken()) || ''}\n      connectorsApiBasePath={config?.cos.apiBasePath || ''}\n      // TODO: remove after demo\n      kafkaManagementApiBasePath={'https://api.openshift.com'}\n    />\n  );\n};\n","import React, { FunctionComponent, useCallback } from 'react';\nimport { I18nextProvider } from 'react-i18next';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport {\n  Auth,\n  AuthContext,\n  BasenameContext,\n  Config,\n  ConfigContext,\n  useAuth,\n  useConfig,\n} from '@rhoas/app-services-ui-shared';\n\nimport { AlertsProvider } from './Alerts';\nimport { AppLayout } from './AppLayout';\nimport { CosRoutes } from './CosRoutes';\nimport { Loading } from './Loading';\nimport i18n from './i18n';\n\n/**\n * Initializes the COS UI with an app that mimicks the console.redhat.com\n * experience without any authentication, to allow E2E tests to be run by a CI\n * pipeline.\n *\n * The `baseUrl` for the API is statically set to `localhost`.\n */\nexport const AppE2E: FunctionComponent = () => {\n  const getBasename = useCallback(() => '/', []);\n\n  const config = {\n    cos: {\n      apiBasePath: 'localhost',\n      configurators: {\n        'debezium-mongodb-1.5.0.Final': {\n          remoteEntry:\n            'https://dbz-ui.apps.kammellol.rhmw-integrations.net/dbz-connector-configurator.remoteEntry.js',\n          scope: 'debezium_ui',\n          module: './config',\n        },\n        'debezium-mysql-1.5.0.Final': {\n          remoteEntry:\n            'https://dbz-ui.apps.kammellol.rhmw-integrations.net/dbz-connector-configurator.remoteEntry.js',\n          scope: 'debezium_ui',\n          module: './config',\n        },\n        'debezium-postgres-1.5.0.Final': {\n          remoteEntry:\n            'https://dbz-ui.apps.kammellol.rhmw-integrations.net/dbz-connector-configurator.remoteEntry.js',\n          scope: 'debezium_ui',\n          module: './config',\n        },\n      } as Record<string, unknown>,\n    },\n  } as Config;\n\n  const authTokenContext = {\n    kas: {\n      getToken: () => Promise.resolve('dummy'),\n    },\n    getUsername: () => Promise.resolve('username'),\n  } as Auth;\n\n  return (\n    <AuthContext.Provider value={authTokenContext}>\n      <BasenameContext.Provider value={{ getBasename }}>\n        <ConfigContext.Provider value={config}>\n          <I18nextProvider i18n={i18n}>\n            <AlertsProvider>\n              <React.Suspense fallback={<Loading />}>\n                <Router>\n                  <AppLayout>\n                    <ConnectedRoutes />\n                  </AppLayout>\n                </Router>\n              </React.Suspense>\n            </AlertsProvider>\n          </I18nextProvider>\n        </ConfigContext.Provider>\n      </BasenameContext.Provider>\n    </AuthContext.Provider>\n  );\n};\n\nconst ConnectedRoutes = () => {\n  const auth = useAuth();\n  const config = useConfig();\n\n  return (\n    <CosRoutes\n      getToken={async () => (await auth?.kas.getToken()) || ''}\n      connectorsApiBasePath={config?.cos.apiBasePath || ''}\n      // TODO: remove after demo\n      kafkaManagementApiBasePath={'https://api.openshift.com'}\n    />\n  );\n};\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { inspect } from '@xstate/inspect';\n\nimport '@patternfly/patternfly/patternfly.css';\nimport '@patternfly/patternfly/utilities/Accessibility/accessibility.css';\nimport '@patternfly/patternfly/utilities/BackgroundColor/BackgroundColor.css';\nimport '@patternfly/patternfly/utilities/Display/display.css';\nimport '@patternfly/patternfly/utilities/Flex/flex.css';\nimport '@patternfly/patternfly/utilities/Sizing/sizing.css';\nimport '@patternfly/patternfly/utilities/Spacing/spacing.css';\n\nimport { AppDemo } from './AppDemo';\nimport { AppE2E } from './AppE2E';\n\nif (process.env.DEMO_APP) {\n  inspect({\n    iframe: false,\n  });\n  ReactDOM.render(<AppDemo />, document.getElementById('root'));\n} else {\n  ReactDOM.render(<AppE2E />, document.getElementById('root'));\n}\n"],"names":["AlertsProvider","children","alerts","setAlerts","useState","timers","setTimers","useEffect","timersKeys","map","timer","key","timeOuts","filter","alert","includes","id","timeOut","setTimeout","hideAlert","forEach","clearTimeout","el","AlertContext","value","addAlert","props","Date","getTime","toString","AlertToastGroup","onCloseAlert","AlertGroup","isToast","variant","title","description","dataTestId","rest","Alert","isLiveRegion","AlertVariant","variantLabel","actionClose","AlertActionCloseButton","onClose","AppLayout","isNavOpen","setIsNavOpen","isMobileView","setIsMobileView","isNavOpenMobile","setIsNavOpenMobile","t","useTranslation","HeaderTools","PageHeaderTools","Header","PageHeader","logo","LogoImg","showNavToggle","headerTools","onNavToggle","Navigation","Nav","role","theme","NavList","NavItem","NavLink","to","activeClassName","Sidebar","PageSidebar","nav","Page","mainContainerId","header","sidebar","onPageResize","mobileView","history","useHistory","src","onClick","push","alt","getKeycloakInstance","init","realm","url","clientId","promiseType","onLoad","e","undefined","console","warn","getKeyCloakToken","updateToken","token","error","KeycloakContext","keycloak","KeycloakAuthProvider","authTokenContext","kas","getToken","getUsername","tokenParsed","then","AuthContext","AppDemo","initialized","setInitialized","getBasename","useCallback","Provider","profile","BasenameContext","ConfigContext","cos","apiBasePath","configurators","remoteEntry","scope","module","I18nextProvider","i18n","fallback","Loading","ConnectedRoutes","Spinner","auth","useAuth","config","useConfig","CosRoutes","connectorsApiBasePath","kafkaManagementApiBasePath","AppE2E","Promise","resolve","DEMO_APP","iframe","document","getElementById"],"sourceRoot":""}